version: "3.8"
services:
  db:
    image: postgres:15
    container_name: currency_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-prod
    ports:
      - 5432:5432

  currency:
    image: currency_app
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-prod
    depends_on:
      - db
    command: ["/currency/docker/app.sh"]
    # command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 7777:8000

  # celery:
  #   image: booking_celery
  #   build:
  #     context: . # celery это библиотека, у неё нет образа, берём из основного билда
  #   container_name: booking_celery
  #   # Если не работает эта команда, используйте закомментированную
  #   command: ["/booking/docker/celery.sh", "celery"] # Второй аргумен для if/elif в скрипте
  #   # command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO"
  #   env_file:
  #     - .env-non-dev
  #   depends_on:
  #     - redis

  # flower:
  #   image: booking_flower
  #   build:
  #     context: . # flower это библиотека, у неё нет образа, берём из основного билда
  #   container_name: booking_flower
  #   # Если не работает эта команда, используйте закомментированную
  #   command: ["/booking/docker/celery.sh", "flower"]
  #   # command: sh -c "celery --app=app.tasks.celery:celery flower"
  #   env_file:
  #     - .env-non-dev
  #   depends_on:
  #     - redis
  #   ports:
  #     - 5555:5555

  # prometheus:
  #   image: prom/prometheus:v2.43.0
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheusdata:/prometheus
  #   restart: unless-stopped
  #   ports:
  #     - 9090:9090

  # grafana:
  #   image: grafana/grafana:9.4.7
  #   container_name: grafana
  #   volumes:
  #     - grafanadata:/var/lib/grafana
  #   restart: unless-stopped
  #   ports:
  #     - 3000:3000
      
volumes:
  postgresdata:
  # grafanadata:
  # prometheusdata: